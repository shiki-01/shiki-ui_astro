---
interface Props {
    class?: string;
    id?: string;
    multiple?: boolean;
    name: string;
    border?: boolean;
    fill?: boolean;
    radius?: 'rounded' | 'full' | 'none';
    shadow?: 'none' | 'md' | 'lg';
}
const {
    class: className,
    id: accordionId,
    multiple = false,
    name,
    border = false,
    fill = false,
    radius = 'rounded',
    shadow = 'none',
} = Astro.props;
const style = {
    border: 'border border-sky-400',
    fill: 'bg-sky-500 text-white',
    radius: {
        'rounded': 'rounded-lg',
        'full': 'rounded-full',
        'none': '',
    },
    shadow: {
        'none': '',
        'md': 'shadow-md shadow-sky-500/20 hover:shadow-sky-500/30 hover:shadow-lg transition-shadow duration-300',
        'lg': 'shadow-lg shadow-sky-500/20 hover:shadow-sky-500/30 hover:shadow-2xl transition-shadow duration-300',
    },
}
---

<div class={`shiki-accordion-root w-fit text-lg px-8 py-10 flex flex-col gap-5 ${border ? style.border : ""} ${fill ? style.fill : ""} ${style.radius[radius]} ${style.shadow[shadow]} ${className}`} id={accordionId} data-multiple={multiple ? "true" : "false"}>
    <slot/>
</div>

<script>
    const accordions = document.querySelectorAll('.shiki-accordion-root')
    accordions?.forEach((el) => {
        const items = el.querySelectorAll('.shiki-accordion-item')
        const multiple = el.getAttribute('data-multiple') == 'true'
        if (!items) return
        items.forEach((item, i) => {
            const trigger = item.querySelector('.shiki-accordion-trigger')
            const content = item.querySelector('.shiki-accordion-content')
            if (!trigger || !content) return
            content.setAttribute('data-is-open', trigger.getAttribute('data-is-open') || 'close')
            trigger.addEventListener('click', () => {
                const isOpen = trigger.getAttribute('data-is-open') || 'close'
                const set = isOpen == 'open' ? 'close' : 'open'
                if (multiple && set == 'open') {
                    items.forEach((item, i) => {
                        const trigger = item.querySelector('.shiki-accordion-trigger')
                        const content = item.querySelector('.shiki-accordion-content')
                        if (!trigger || !content) return
                        trigger.setAttribute('data-is-open', 'close')
                        content.setAttribute('data-is-open', 'close')
                    })
                }
                trigger.setAttribute('data-is-open', set)
                content.setAttribute('data-is-open', set)
            })
        })
    })
</script>